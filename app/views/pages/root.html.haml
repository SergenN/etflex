- # DEBT: Move this definition to controller...

- @icon_props = { car:                 %w[eco suv],
                  city:                %w[large small],
                  eco_buildings:       %w[green coal_dry],
                  energy_sources:      %w[solar nuclear oil],
                  geothermal_pipeline: %w[geothermal none pipeline],
                  ground:              %w[dry green],
                  solar_heater:        %w[none heater],
                  turbines:            %w[coal wind] }

#page-view.root
  #core
    #theme-header
      %a#logo(href="/") Energy Transition Model light
      .world{"data-prop-location" => "header"}
        .plane
        .sun
        - @icon_props.each do |key, states|
          .icon-prop{class: key.to_s.gsub(/_/,"-")}
            - active_state = states.sample
            - states.each do |state|
              %span.icon{ class: "#{state.gsub(/_/,'-')} #{active_state == state ? 'active' : 'inactive'}",
                          style: ("display: none;" unless active_state == state ) }

    %section#main

      %h1
        = I18n.t('scenes.etlite.landingTitle', future: I18n.t('scenes.etlite.landingFuture')).html_safe
        %em= I18n.t 'scenes.etlite.landingSubtitle'

      = render partial: "landing_#{ I18n.locale }"

      %section.buttons
        %a.blue.launch{ href: "/scenes/1" }
          = I18n.t 'scenes.etlite.landingButton'

      #scores
        %h2== #{ I18n.t 'words.high_scores' }:
        .loading== #{ I18n.t 'words.loading' }...

:javascript
  window.bootstrap = #{ @high_scenarios.map(&:to_pusher_event).to_json }
